name: Generate APT Packages Metadata

on:
  workflow_dispatch:  # Manual trigger from the Actions tab

permissions:
  contents: write

jobs:
  build-packages-metadata:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git safe directory
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"

      - name: Install dpkg-dev
        run: |
          sudo apt-get update
          sudo apt-get install -y dpkg-dev

      - name: Prepare structure
        shell: bash
        run: |
          set -euo pipefail
          cd docs
          mkdir -p \
            dists/stable/main/binary-amd64 \
            dists/stable/main/binary-all \
            dists/stable/main/i18n \
            dists/stable/main/cnf \
            dists/stable \
            pool/main
          # Avoid Pages/Jekyll quirks
          : > .nojekyll

      - name: Generate Packages indexes (amd64 + all)
        shell: bash
        env:
          GZIP: -n
        run: |
          set -euo pipefail
          cd docs

          DEB_DIR="pool/main"
          TMP_DIR="tmp-aptbuild"
          rm -rf "$TMP_DIR"
          mkdir -p "$TMP_DIR"

          # Build once for all packages present
          dpkg-scanpackages --multiversion "$DEB_DIR" /dev/null > "$TMP_DIR/Packages.all" || true

          # Extract stanzas by architecture (records are blank-line separated)
          # binary-amd64 should include both amd64 and all
          awk -v RS='' -v ORS="\n\n" '/\nArchitecture: (amd64|all)\n/ || /\rArchitecture: (amd64|all)\r/ { print }' \
            "$TMP_DIR/Packages.all" > dists/stable/main/binary-amd64/Packages || true

          # binary-all should include only all
          awk -v RS='' -v ORS="\n\n" '/\nArchitecture: all\n/ || /\rArchitecture: all\r/ { print }' \
            "$TMP_DIR/Packages.all" > dists/stable/main/binary-all/Packages || true

          # Ensure files exist even if empty
          : > dists/stable/main/binary-amd64/Packages
          : > dists/stable/main/binary-all/Packages

          # Compress deterministically
          gzip -n -9 -f dists/stable/main/binary-amd64/Packages
          gzip -n -9 -f dists/stable/main/binary-all/Packages

      - name: Generate Release file (unsigned, with hashes)
        shell: bash
        run: |
          set -euo pipefail
          cd docs

          cat > apt-ftparchive.conf <<'EOF'
          APT::FTPArchive::Release {
            Origin "cockpit-dockermanager";
            Label "cockpit-dockermanager";
            Suite "stable";
            Codename "stable";
            Architectures "amd64 all";
            Components "main";
            Description "Minimal repo";
          };
          EOF

          apt-ftparchive -c apt-ftparchive.conf release dists/stable > dists/stable/Release
          rm -f apt-ftparchive.conf
          
      - name: Commit and push changes
        env:
          BRANCH_NAME: ${{ github.ref_name }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add docs/dists/stable docs/.nojekyll
          git commit -m "Auto-generate full APT repo metadata [skip ci]" || echo "No changes to commit"
          git push origin "HEAD:${BRANCH_NAME}"
