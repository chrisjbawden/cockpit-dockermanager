name: Generate APT Packages Metadata

on:
  workflow_dispatch:  # Manual trigger from the Actions tab

permissions:
  contents: write

jobs:
  build-packages-metadata:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git safe directory
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"

      - name: Install tools
        run: |
          sudo apt-get update
          sudo apt-get install -y dpkg-dev apt-utils

      - name: Prepare structure
        shell: bash
        run: |
          set -euo pipefail
          cd docs
          mkdir -p \
            dists/stable/main/binary-amd64 \
            dists/stable/main/binary-all
          : > .nojekyll

      - name: Debug - list .debs and git status
        shell: bash
        run: |
          set -e
          cd docs
          echo "== .deb files under docs/dists/stable/main/binary-all =="
          find dists/stable/main/binary-all -maxdepth 1 -type f -name '*.deb' -printf '%f\n' | sort || true
          echo "== git status before build =="
          git status --porcelain

      - name: Generate Packages and Release
        shell: bash
        run: |
          set -euo pipefail
          cd docs

          # Create apt-ftparchive config
          cat > apt-ftparchive.conf <<'EOF'
          Dir {
            ArchiveDir ".";
          };
          Default {
            Packages::Compress ". gzip";
          };
          Tree "dists/stable" {
            Sections "main";
            Architectures "amd64 all";
          };
          APT::FTPArchive::Release {
            Origin "cockpit-dockermanager";
            Label "cockpit-dockermanager";
            Suite "stable";
            Codename "stable";
            Architectures "amd64 all";
            Components "main";
            Description "Minimal repo (binary-all hosted packages)";
          };
          EOF

          # Build Packages for each arch
          apt-ftparchive -c apt-ftparchive.conf packages dists/stable/main/binary-all > dists/stable/main/binary-all/Packages
          gzip -9f dists/stable/main/binary-all/Packages

          apt-ftparchive -c apt-ftparchive.conf packages dists/stable/main/binary-amd64 > dists/stable/main/binary-amd64/Packages
          gzip -9f dists/stable/main/binary-amd64/Packages

          # Build Release file with correct checksums
          apt-ftparchive -c apt-ftparchive.conf release dists/stable > dists/stable/Release

          rm -f apt-ftparchive.conf

      - name: Commit and push changes
        env:
          BRANCH_NAME: ${{ github.ref_name }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add -f docs/dists/stable docs/.nojekyll
          git commit -m "Regenerate APT Packages and Release [skip ci]" || echo "No changes to commit"
          git push origin "HEAD:${BRANCH_NAME}"
