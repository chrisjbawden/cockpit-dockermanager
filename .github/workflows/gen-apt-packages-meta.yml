name: Generate APT Packages Metadata

on:
  workflow_dispatch:  # Manual run from Actions tab

jobs:
  build-packages-metadata:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install tooling
        run: |
          sudo apt-get update
          sudo apt-get install -y dpkg-dev gzip

      - name: Prepare repo structure
        run: |
          set -euo pipefail
          cd docs
          mkdir -p pool/main
          mkdir -p dists/stable/main/binary-amd64
          mkdir -p dists/stable/main/binary-all
          mkdir -p dists/stable/main/i18n
          mkdir -p dists/stable/main/cnf
          # your .deb files should live under docs/pool/main/**

      - name: Generate Packages (from pool) and split by arch
        run: |
          set -euo pipefail
          cd docs

          # Build a complete Packages listing from the pool
          dpkg-scanpackages --multiversion pool/main /dev/null > /tmp/Packages.full

          # Split stanzas by architecture (blank-lineâ€“separated paragraphs)
          # amd64 file should include both amd64 and all
          awk -v RS="" '/\nArchitecture: (all|amd64)\n/ {print}' /tmp/Packages.full \
            > dists/stable/main/binary-amd64/Packages

          # all file contains only Architecture: all
          awk -v RS="" '/\nArchitecture: all\n/ {print}' /tmp/Packages.full \
            > dists/stable/main/binary-all/Packages

          # Compress (keep uncompressed too)
          gzip -9fk dists/stable/main/binary-amd64/Packages
          gzip -9fk dists/stable/main/binary-all/Packages

      - name: Quiet optional APT indexes (to suppress Ign: lines)
        run: |
          set -euo pipefail
          cd docs

          # Translations
          : > dists/stable/main/i18n/Translation-en
          gzip -fk dists/stable/main/i18n/Translation-en
          cp dists/stable/main/i18n/Translation-en.gz dists/stable/main/i18n/Translation-en_US.gz

          # Contents (minimal empty files)
          : > dists/stable/main/Contents-amd64
          : > dists/stable/main/Contents-all
          gzip -fk dists/stable/main/Contents-amd64 dists/stable/main/Contents-all

          # command-not-found metadata (empty)
          : > dists/stable/main/cnf/Commands-amd64
          : > dists/stable/main/cnf/Commands-all
          gzip -fk dists/stable/main/cnf/Commands-amd64 dists/stable/main/cnf/Commands-all

      - name: Generate minimal Release (unsigned)
        run: |
          set -euo pipefail
          cd docs
          cat > dists/stable/Release <<'REL'
          Origin: cockpit-dockermanager
          Label: cockpit-dockermanager
          Suite: stable
          Codename: stable
          Architectures: amd64 all
          Components: main
          Description: Minimal APT repository on GitHub Pages
          Languages: en
          REL

      - name: Commit and push changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add docs/dists/stable
          git commit -m "Update APT metadata (Packages, quiet indexes, Release) [skip ci]" || echo "No changes to commit"
          # Push back to the same branch this workflow ran on
          BRANCH="${GITHUB_REF#refs/heads/}"
          git push origin "HEAD:${BRANCH:-main}"
