name: Generate APT Packages Metadata

on:
  workflow_dispatch: {}

jobs:
  build-packages-metadata:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install tooling
        run: |
          sudo apt-get update
          sudo apt-get install -y dpkg-dev gzip

      - name: Prepare repo structure
        run: |
          set -e
          set -u
          set -o pipefail
          cd docs
          mkdir -p pool/main
          mkdir -p dists/stable/main/binary-amd64
          mkdir -p dists/stable/main/binary-all
          mkdir -p dists/stable/main/i18n
          mkdir -p dists/stable/main/cnf
          # Place your .deb files under docs/pool/main/**

      - name: Generate Packages (from pool) and split by arch
        run: |
          set -e
          set -u
          set -o pipefail
          cd docs

          # Build complete Packages from the pool
          dpkg-scanpackages --multiversion pool/main /dev/null > /tmp/Packages.full

          # amd64 list: includes both amd64 and all
          awk -v RS='' '/(^|\n)Architecture: (amd64|all)(\n|$)/ { print }' /tmp/Packages.full \
            > dists/stable/main/binary-amd64/Packages

          # all list: only Architecture: all
          awk -v RS='' '/(^|\n)Architecture: all(\n|$)/ { print }' /tmp/Packages.full \
            > dists/stable/main/binary-all/Packages

          # Compress (keep uncompressed too)
          gzip -9fk dists/stable/main/binary-amd64/Packages
          gzip -9fk dists/stable/main/binary-all/Packages

      - name: Quiet optional APT indexes (suppress Ign: lines)
        run: |
          set -e
          set -u
          set -o pipefail
          cd docs

          # Translations
          : > dists/stable/main/i18n/Translation-en
          gzip -fk dists/stable/main/i18n/Translation-en
          cp dists/stable/main/i18n/Translation-en.gz dists/stable/main/i18n/Translation-en_US.gz

          # Contents
          : > dists/stable/main/Contents-amd64
          gzip -fk dists/stable/main/Contents-amd64
          : > dists/stable/main/Contents-all
          gzip -fk dists/stable/main/Contents-all

          # command-not-found (cnf)
          : > dists/stable/main/cnf/Commands-amd64
          gzip -fk dists/stable/main/cnf/Commands-amd64
          : > dists/stable/main/cnf/Commands-all
          gzip -fk dists/stable/main/cnf/Commands-all

      - name: Generate minimal Release (unsigned)
        run: |
          set -e
          set -u
          set -o pipefail
          cd docs
          cat > dists/stable/Release <<'REL'
          Origin: cockpit-dockermanager
          Label: cockpit-dockermanager
          Suite: stable
          Codename: stable
          Architectures: amd64 all
          Components: main
          Description: Minimal APT repository on GitHub Pages
          Languages: en
          REL

      - name: Commit and push changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e
          set -u
          set -o pipefail
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add docs/dists/stable
          git commit -m "Update APT metadata (Packages, quiet indexes, Release) [skip ci]" || echo "No changes to commit"
          BRANCH="${GITHUB_REF#refs/heads/}"
          git push origin "HEAD:${BRANCH:-main}"
