name: Build DEB Package

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Package version (e.g. 1.0.1)"
        required: true
        default: "1.0.1"

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      PKG_NAME: dockermanager      # package name inside control file
      BUILD_DIR: build             # temporary folder for packaging tree

    steps:
    # --------------------------------------------------------------
    # 1. Check out source
    # --------------------------------------------------------------
    - name: Checkout repository
      uses: actions/checkout@v4

    # --------------------------------------------------------------
    # 2. Lay out packaging tree in $BUILD_DIR
    # --------------------------------------------------------------
    - name: Prepare packaging structure
      run: |
        rm -rf "$BUILD_DIR"                    # ensure a clean slate
        mkdir -p "$BUILD_DIR/DEBIAN"
        mkdir -p "$BUILD_DIR/usr/share/cockpit/$PKG_NAME"

        # Copy project files into the payload (recursively, incl. dot-files)
        cp -rT "$PKG_NAME" \
              "$BUILD_DIR/usr/share/cockpit/$PKG_NAME"

    # --------------------------------------------------------------
    # 3. Generate control file with version input
    # --------------------------------------------------------------
    - name: Generate control file
      env:
        VERSION: ${{ github.event.inputs.version }}
      run: |
        printf '%s\n' \
          "Package: $PKG_NAME" \
          "Version: $VERSION" \
          "Section: admin" \
          "Priority: optional" \
          "Architecture: all" \
          "Maintainer: Chris Bawden <chrisjbawden@outlook.com>" \
          "Description: Cockpit plugin â€“ Docker Manager UI" \
          > "$BUILD_DIR/DEBIAN/control"

        chmod 0755 "$BUILD_DIR/DEBIAN"
        chmod 0644 "$BUILD_DIR/DEBIAN/control"

    # --------------------------------------------------------------
    # 4. Build the package and create the two artefacts
    # --------------------------------------------------------------
    - name: Build DEB
      env:
        VERSION: ${{ github.event.inputs.version }}
      run: |
        dpkg-deb --build --root-owner-group "$BUILD_DIR" \
                 "${PKG_NAME}_${VERSION}_all.deb"

        # Version-specific and rolling filenames
        cp "${PKG_NAME}_${VERSION}_all.deb" "${PKG_NAME}-${VERSION}.deb"
        cp "${PKG_NAME}_${VERSION}_all.deb" "${PKG_NAME}.deb"

    # --------------------------------------------------------------
    # 5. Commit the artefacts back to the repo root
    # --------------------------------------------------------------
    - name: Commit .deb packages to repo root
      uses: EndBug/add-and-commit@v9
      with:
        author_name: GitHub Actions
        author_email: actions@github.com
        message: >
          Add ${{ env.PKG_NAME }}-${{ github.event.inputs.version }}.deb
          and rolling ${{ env.PKG_NAME }}.deb
        add: |
          ${{ env.PKG_NAME }}-${{ github.event.inputs.version }}.deb
          ${{ env.PKG_NAME }}.deb
